{"version":3,"sources":["components/PayPal/PayPal.js","components/NewCustomers/NewCustomerForm.js","components/NewCustomers/NewCustomer.js","components/CustomerTable/CustomerTable.js","components/EditSessionModal/EditSessionForm.js","components/CustomerTable/CustomerTableEdit.js","components/EditSessionModal/EditSessionModal.js","App.js","index.js"],"names":["PayPal","props","paypal","useRef","serviceName","servicePrice","console","log","useEffect","window","Buttons","createOrder","data","actions","err","order","create","intent","purchase_units","description","amount","currency_code","value","onApprove","a","capture","submitHandler","onError","render","current","ref","NewCustomerForm","useState","enteredFirstName","setEnteredFirstName","enteredLastName","setEnteredLastName","buttonText","setButtonText","firstValid","setFirstValid","lastValid","setLastValid","buttonTextHandler","checkout","Form","Group","className","controlId","Label","Control","isInvalid","type","placeholder","onChange","event","target","setCustomerPayed","onAddCustomer","customerData","id","firstName","lastName","clientNumber","placeInLine","onAddCustomerToLine","Button","variant","onClick","setCheckOut","Alert","NewCustomer","newCustomerData","lineLength","toString","customerPayed","CustomerTable","headerColor","customTHMiddle","width","backgroundColor","customTHLeft","borderRadius","borderCollapse","customTHRight","Table","style","margin","textAlign","hover","borderless","arr","color","n","i","customers","length","tableData","EditSessionForm","timeValue","setTimeValue","timeType","setTimeType","serviceDesc","setServiceDesc","price","setPrice","numValid","setNumValid","serValid","setSerValid","priceValid","setPriceValid","typeValid","setTypeValid","timeFormats","step","min","Select","aria-label","timeFormatOptions","setX","setS","showEditModal","setServicePrice","setServiceName","CustomerTableEdit","localModalHandler","setLocalModalHandler","deleteId","setDeleteId","deleteName","setDeleteName","customModal","content","height","right","bottom","border","IconButton","sx","isOpen","ariaHideApp","filter","obj","editCustomers","deleteFinal","EditSessionModal","x","w","setW","s","password","showPassword","values","setValues","modalBool","top","background","Tabs","defaultActiveKey","Tab","eventKey","title","onMouseDown","preventDefault","p","TryRounded","DUMMY_CUSTOMERS","App","paidCustomers","setPaidCustomers","nextClientNumber","setNextClientNumber","editSession","setEditSession","placeInLineHandler","customersStillInLine","process","customer","require","config","ReactDOM","document","getElementById"],"mappings":"8TAEe,SAASA,EAAOC,GAE3B,IAAMC,EAASC,mBAETC,EAAcH,EAAMG,YACpBC,EAAeJ,EAAMI,aAkC3B,OAhCAC,QAAQC,IAAIN,EAAO,SACnBK,QAAQC,IAAIH,EAAa,QACzBE,QAAQC,IAAIF,EAAc,SAE1BG,qBAAU,WACFC,OAAOP,OACFQ,QAAQ,CACLC,YAAa,SAACC,EAAMC,EAASC,GACzB,OAAOD,EAAQE,MAAMC,OAAO,CACxBC,OAAQ,UACRC,eAAgB,CACZ,CACIC,YAAaf,EACbgB,OAAQ,CACJC,cAAe,MACfC,MAAOjB,QAM3BkB,UAAU,WAAD,4BAAE,WAAOX,EAAMC,GAAb,eAAAW,EAAA,sEACaX,EAAQE,MAAMU,UAD3B,cACDV,EADC,OAEPT,QAAQC,IAAIQ,GAFL,SAGDd,EAAMyB,gBAHL,2CAAF,qDAAC,GAKVC,QAAS,SAACb,GACNR,QAAQC,IAAIO,MAErBc,OAAO1B,EAAO2B,WACtB,CAAC5B,EAAOG,EAAaC,IAGpB,8BACI,qBAAKyB,IAAK5B,M,yCCoGP6B,EAtIS,SAAC9B,GACvB,MAAgD+B,mBAAS,IAAzD,mBAAOC,EAAP,KAAyBC,EAAzB,KACA,EAA8CF,mBAAS,IAAvD,mBAAOG,EAAP,KAAwBC,EAAxB,KACA,EAAoCJ,mBAAS,YAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAAoCN,oBAAS,GAA7C,mBAAOO,EAAP,KAAmBC,EAAnB,KACA,EAAkCR,oBAAS,GAA3C,mBAAOS,EAAP,KAAkBC,EAAlB,KAEMC,EAAoB,YACD,IAAnB1C,EAAM2C,SACRN,EAAc,YAEXA,EAAc,WAoDrB,OACE,eAACO,EAAA,EAAD,WACE,eAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,OAAtB,UACE,oBAAIA,UAAU,sBAAd,yDACA,+BAAK9C,EAAMG,YAAX,SAA8BH,EAAMI,mBAGtC,eAACwC,EAAA,EAAKC,MAAN,CAAYC,UAAU,OAAOC,UAAU,iBAAvC,UACE,cAACH,EAAA,EAAKI,MAAN,yBACA,cAACJ,EAAA,EAAKK,QAAN,CACEC,UAAWZ,EACXa,KAAK,OACLC,YAAY,aACZ/B,MAAOW,EACPqB,SAhDuB,SAACC,GAC9BrB,EAAoBqB,EAAMC,OAAOlC,aAmD/B,eAACuB,EAAA,EAAKC,MAAN,CAAYC,UAAU,OAAOC,UAAU,iBAAvC,UACE,cAACH,EAAA,EAAKI,MAAN,wBACA,cAACJ,EAAA,EAAKK,QAAN,CACEC,UAAWV,EACXW,KAAK,OACLC,YAAY,YACZ/B,MAAOa,EACPmB,SAvDsB,SAACC,GAC7BnB,EAAmBmB,EAAMC,OAAOlC,aAyD9B,qBAAKyB,UAAU,SAAf,SACC9C,EAAM2C,SAED,cAAC5C,EAAD,CAEAI,YAAeH,EAAMG,YACrBC,aAAgBJ,EAAMI,aACtBoD,iBAAkBxD,EAAMwD,iBACxBC,cAAezD,EAAMyD,cACrBhC,cA/DY,WACpB,IAAMiC,EAAe,CACnBC,GAAI,GACJC,UAAW5B,EACX6B,SAAU3B,EACV4B,aAAc,GACdC,YAAa,IAGf/D,EAAMgE,oBAAoBN,GAC1BzB,EAAoB,IACpBE,EAAmB,IACnBnC,EAAMwD,kBAAiB,GACvBd,IACAH,GAAc,GACdE,GAAa,MAqDP,0BAGJ,cAACwB,EAAA,EAAD,CAAQC,QAAQ,UAAUf,KAAK,SAC3BgB,QAAS,WACP5B,GAAc,GACdE,GAAa,IAhGI,KAArBT,GAA+C,KAApBE,IAIN,KAArBF,GACFO,GAAc,GAEQ,KAApBL,GACFO,GAAa,GAER,OAgCgB,IAAnBzC,EAAM2C,SACR3C,EAAMoE,aAAY,GAEfpE,EAAMoE,aAAY,GAsDb1B,IACAH,GAAc,GACdE,GAAa,KARrB,SAWKL,IAEJE,GAAcE,EAGb,cAAC6B,EAAA,EAAD,CAAOvB,UAAU,qBAA2CoB,QAAQ,SAApE,0DAA0C,mBAI1C,4BCvGOI,G,OA7BK,SAACtE,GAanB,OACE,qBAAK8C,UAAU,eAAf,SACI,cAAC,EAAD,CACEkB,oBAZ4B,SAACO,GACnC,IAAMb,EAAY,2BACba,GADa,IAEhBZ,GAAI3D,EAAMwE,WAAWC,aAEvBzE,EAAMyD,cAAcC,IAQdf,SAAU3C,EAAM2C,SAChBxC,YAAaH,EAAMG,YACnBC,aAAcJ,EAAMI,aACpBgE,YAAapE,EAAMoE,YACnBM,cAAe1E,EAAM0E,cACrBlB,iBAAkBxD,EAAMwD,iBACxBC,cAAezD,EAAMyD,oB,QC8ChBkB,EAtEO,SAAC3E,GAEnB,IAAM4E,EAAc,UAUdC,EAAiB,CACnBC,MAAO,MACPC,gBAAiBH,GAGfI,EAAe,CACjBC,aAAc,mBACdC,eAAgB,WAChBJ,MAAO,MACPC,gBAAiBH,GAGfO,EAAgB,CAClBF,aAAc,mBACdC,eAAgB,WAChBJ,MAAO,MACPC,gBAAiBH,GA0BrB,OACI,eAACQ,EAAA,EAAD,CAAOC,MAnDS,CAEhBP,MAAO,MACPQ,OAAQ,OACRC,UAAW,UA+CgBC,OAAK,EAACC,YAAU,EAACvB,QAAQ,OAApD,UACI,gCACI,+BACI,oBAAImB,MAAOL,EAAX,2BACA,oBAAIK,MAAOR,EAAX,kBACA,oBAAIQ,MAAOF,EAAX,iCAGR,gCAhCU,WAYd,IAXA,IAAIO,EAAM,GACJC,EAAQ,SAACC,GACX,OAAU,IAANA,GAAYA,EAAI,IAAO,EAChB,CACHb,gBAAiB,WAGb,CACRA,gBAAiB,YAGhBc,EAAI,EAAGA,EAAI7F,EAAM8F,UAAUC,OAAQF,IACxCH,EAAIG,GACA,+BACI,oBAAIR,MAAOM,EAAME,GAAjB,SAAsB7F,EAAM8F,UAAUD,GAAG9B,cACzC,oBAAIsB,MAAOM,EAAME,GAAjB,SAAsB7F,EAAM8F,UAAUD,GAAGjC,UAAY,IAAM5D,EAAM8F,UAAUD,GAAGhC,WAC9E,oBAAIwB,MAAOM,EAAME,GAAjB,SAAsB7F,EAAM8F,UAAUD,GAAG/B,iBAHpC9D,EAAM8F,UAAUD,GAAG/B,cAMpC,OAAO4B,EAaEM,SC6GFC,G,MA1KS,SAACjG,GACrB,MAAkC+B,mBAAS,GAA3C,mBAAOmE,EAAP,KAAkBC,EAAlB,KACA,EAAgCpE,mBAAS,IAAzC,mBAAOqE,EAAP,KAAiBC,EAAjB,KACA,EAAsCtE,mBAAS,IAA/C,mBAAOuE,EAAP,KAAoBC,EAApB,KACA,EAA0BxE,mBAAS,GAAnC,mBAAOyE,EAAP,KAAcC,EAAd,KACA,EAAgC1E,oBAAS,GAAzC,mBAAO2E,EAAP,KAAiBC,EAAjB,KACA,EAAgC5E,oBAAS,GAAzC,mBAAO6E,EAAP,KAAiBC,EAAjB,KACA,EAAoC9E,oBAAS,GAA7C,mBAAO+E,EAAP,KAAmBC,EAAnB,KACA,EAAkChF,oBAAS,GAA3C,mBAAOiF,EAAP,KAAkBC,EAAlB,KAEMC,EAAc,CAChB,SACA,UACA,OACA,SAyEJ,OAEI,eAACtE,EAAA,EAAD,WACI,cAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,OAAtB,SACI,oBAAIA,UAAU,cAAd,qDAGJ,eAACF,EAAA,EAAKC,MAAN,CAAYC,UAAU,OAAOC,UAAU,iBAAvC,UACI,cAACH,EAAA,EAAKI,MAAN,gCACA,cAACJ,EAAA,EAAKK,QAAN,CACIH,UAAU,gBACVI,UAAWwD,EACXtD,YAAa,EACbD,KAAK,SACL9B,MAAO6E,EACP7C,SA/Be,SAACC,GAC5B6C,EAAa7C,EAAMC,OAAOlC,QA+Bd8F,KAAK,IACLC,IAAI,MAER,cAACxE,EAAA,EAAKyE,OAAN,CACIC,aAAW,yBACXjE,SAjCc,SAACC,GAC3B+C,EAAY/C,EAAMC,OAAOlC,QAiCb6B,UAAW8D,EACX3F,MAAO+E,EAJX,SAzFc,WAEtB,IADA,IAAIV,EAAM,CAAC,wBAAQrE,MAAO,GAAf,6BAAwB,OAC1BwE,EAAI,EAAGA,EAAIqB,EAAYnB,OAAQF,IAChCH,EAAIG,EAAE,GAAK,wBAAQxE,MAAO6F,EAAYrB,GAA3B,SAAmDqB,EAAYrB,IAA3BA,EAAEpB,YAEzD,OAAOiB,EA0FM6B,QAIT,eAAC3E,EAAA,EAAKC,MAAN,CAAYC,UAAU,OAAOC,UAAU,iBAAvC,UACI,cAACH,EAAA,EAAKI,MAAN,kCACA,cAACJ,EAAA,EAAKK,QAAN,CACAC,UAAW0D,EACXzD,KAAK,OACLC,YAAY,qBACZ/B,MAAOiF,EACPjD,SA5CqB,SAACC,GAC9BiD,EAAejD,EAAMC,OAAOlC,aA8CxB,eAACuB,EAAA,EAAKC,MAAN,CAAYC,UAAU,OAAOC,UAAU,iBAAvC,UACI,cAACH,EAAA,EAAKI,MAAN,kCACA,cAACJ,EAAA,EAAKK,QAAN,CACAC,UAAW4D,EACX1D,YAAY,OACZD,KAAK,SACL9B,MAAOmF,EACPnD,SAlDe,SAACC,GACxBmD,EAASnD,EAAMC,OAAOlC,QAkDd8F,KAAK,OACLC,IAAI,YAGR,cAACnD,EAAA,EAAD,CACIC,QAAQ,UACRf,KAAK,SACLgB,QAAS,WA3GjBnE,EAAMwH,MAAK,GACXxH,EAAMyH,KAAK,IACXzH,EAAM0H,eAAc,IAsGhB,oBAOA,cAACzD,EAAA,EAAD,CACIC,QAAQ,UACRf,KAAK,SACLgB,QAAS,WA5GjBwC,GAAY,GACZM,GAAa,GACbJ,GAAY,GACZE,GAAc,MAEVb,EAAY,GACC,KAAbE,GACgB,KAAhBE,GACgB,uBAAhBA,GACAE,EAAQ,KAEJN,EAAY,KACZS,GAAY,GAEC,KAAbP,GACAa,GAAa,GAEG,KAAhBX,GAAsC,uBAAhBA,GACtBO,GAAY,GAEZL,EAAQ,KACRO,GAAc,GAGX,MAtCX/G,EAAM2H,gBAAgBnB,GACtBxG,EAAM4H,eAAe1B,EAAY,IAAME,EAAW,OAASE,GAC3DtG,EAAMwH,MAAK,GACXxH,EAAMyH,KAAK,IACXzH,EAAM0H,eAAc,KAmHhB,oBAWChB,GAAYE,GAAYE,EAGrB,cAACzC,EAAA,EAAD,CAAOvB,UAAU,qBAA4CoB,QAAQ,SAArE,sEAA0C,oBAI1C,6B,2CCGD2D,EAnKW,SAAC7H,GACvB,MAAkD+B,oBAAS,GAA3D,mBAAO+F,EAAP,KAA0BC,EAA1B,KACA,EAAgChG,mBAAS,IAAzC,mBAAOiG,EAAP,KAAiBC,EAAjB,KACA,EAAoClG,mBAAS,IAA7C,mBAAOmG,EAAP,KAAmBC,EAAnB,KAEMvD,EAAc,UAMdwD,EAAc,CAChBC,QAAS,CACLvD,MAAO,MACPwD,OAAQ,OACRC,MAAO,OACPC,OAAQ,OACRC,OAAQ,OACR1D,gBAAiB,UAYnBF,EAAiB,CACnBC,MAAO,MACPC,gBAAiBH,GAGfI,EAAe,CACjBC,aAAc,mBACdC,eAAgB,WAChBJ,MAAO,MACPC,gBAAiBH,GAGfO,EAAgB,CAClBF,aAAc,mBACdC,eAAgB,WAChBJ,MAAO,MACPC,gBAAiBH,GA8DrB,OACI,gCACI,oBAAIS,MAvGQ,CAChBE,UAAW,UAsGP,6CACA,eAACH,EAAA,EAAD,CAAOC,MAzFK,CAEhBP,MAAO,OACPQ,OAAQ,OACRC,UAAW,UAqFoBE,YAAU,EAACvB,QAAQ,OAA9C,UACI,gCACI,+BACI,oBAAImB,MAAOL,EAAX,2BACA,oBAAIK,MAAOR,EAAX,kBACA,oBAAIQ,MAAOR,EAAX,4BACA,oBAAIQ,MAAOF,EAAX,kCAGR,gCA/CM,WAYd,IAXA,IAAIO,EAAM,GACJC,EAAQ,SAACC,GACX,OAAU,IAANA,GAAYA,EAAI,IAAO,EAChB,CACHb,gBAAiB,WAGb,CACRA,gBAAiB,YATN,WAYVc,GACLH,EAAIG,GACA,qBAA0C/C,UAAU,uBAApD,UACI,oBAAIuC,MAAOM,EAAME,GAAjB,SAAsB7F,EAAM8F,UAAUD,GAAG9B,cACzC,oBAAIsB,MAAOM,EAAME,GAAjB,SAAsB7F,EAAM8F,UAAUD,GAAGjC,UAAY,IAAM5D,EAAM8F,UAAUD,GAAGhC,WAC9E,oBAAIwB,MAAOM,EAAME,GAAjB,SAAsB7F,EAAM8F,UAAUD,GAAG/B,eACzC,oBAAIuB,MAAOM,EAAME,GAAI/C,UAAU,cAA/B,SACI,cAAC4F,EAAA,EAAD,CACIvE,QAAS,WACL4D,GAAqB,GACrBE,EAAYjI,EAAM8F,UAAUD,GAAGlC,IAC/BwE,EAAcnI,EAAM8F,UAAUD,GAAGjC,UAAY,IAAM5D,EAAM8F,UAAUD,GAAGhC,WAJ9E,SAOI,cAAC,IAAD,CAAmB8E,GAAI,CAAEhD,MAAO,gBAZnC3F,EAAM8F,UAAUD,GAAG/B,eAF3B+B,EAAI,EAAGA,EAAI7F,EAAM8F,UAAUC,OAAQF,IAAM,EAAzCA,GAoBT,OAAOH,EAgBMM,QAGT,cAAC/B,EAAA,EAAD,CACIC,QAAQ,UACRf,KAAK,SACLgB,QAAS,WA7EjBnE,EAAMwH,MAAK,GACXxH,EAAMyH,KAAK,IACXzH,EAAM0H,eAAc,IAwEhB,kBAOA,qBAAKrC,MAAO+C,EAAZ,SACI,cAAC,IAAD,CACItF,UAAU,eACVuC,MAAO+C,EACPQ,OAAQd,EACRe,aAAa,EAJjB,SAMI,sBAAK/F,UAAU,iBAAf,UACI,kEAAqCoF,EAArC,4CACA,cAACjE,EAAA,EAAD,CACIC,QAAQ,UACRf,KAAK,SACLgB,QAAS,YAvFb,WAKhB,IAJA,IAAIuB,EAAM1F,EAAM8F,UAAUgD,QAAO,SAAUC,GACvC,OAAOA,EAAIpF,KAAOqE,KAGbnC,EAAI,EAAGA,EAAIH,EAAIK,OAAQF,IAC5BH,EAAIG,GAAG9B,YAAc8B,EAAI,EAG7B7F,EAAMgJ,cAActD,GACpBqC,GAAqB,GA6EakB,IAHlB,iBAOA,cAAChF,EAAA,EAAD,CACIC,QAAQ,UACRf,KAAK,SACLgB,QAAS,WAhF7B4D,GAAqB,IA6EL,+B,2DCJTmB,EAxIU,SAAClJ,GACtB,MAAkB+B,oBAAS,GAA3B,mBAAOoH,EAAP,KAAU3B,EAAV,KACA,EAAkBzF,oBAAS,GAA3B,mBAAOqH,EAAP,KAAUC,EAAV,KACA,EAAkBtH,mBAAS,IAA3B,mBAAOuH,EAAP,KAAU7B,EAAV,KACA,EAA4B1F,mBAAS,CACjCwH,SAAU,GACVC,cAAc,IAFlB,mBAAOC,EAAP,KAAeC,EAAf,KAkCA,OACI,cAAC,IAAD,CACId,OAAQ5I,EAAM2J,UACdtE,MAZa,CACjBgD,QAAS,CACPuB,IAAK,KACLpB,OAAQ,OACRqB,WAAY,UACZpB,OAAQ,SAQNb,eAAgB5H,EAAM4H,eACtBD,gBAAiB3H,EAAM2H,gBACvBD,cAAe1H,EAAM0H,cACrBmB,aAAa,EANjB,SAQMM,EACE,eAACW,EAAA,EAAD,CACIC,iBAAiB,IACjBpG,GAAG,WACHb,UAAU,OAHd,UAKI,cAACkH,EAAA,EAAD,CAAKC,SAAS,IAAIC,MAAM,WAAxB,SACI,qBAAKpH,UAAU,eAAf,SACA,cAAC,EAAD,CACI8E,eAAgB5H,EAAM4H,eACtBD,gBAAiB3H,EAAM2H,gBACvBD,cAAe1H,EAAM0H,cACrBF,KAAMA,EACNC,KAAMA,QAKd,cAACuC,EAAA,EAAD,CAAKC,SAAS,IAAIC,MAAM,OAAxB,SACI,qBAAKpH,UAAU,oBAAf,SACI,cAAC,EAAD,CACIgD,UAAW9F,EAAM8F,UACjBkD,cAAehJ,EAAMgJ,cACrBtB,cAAe1H,EAAM0H,cACrBF,KAAMA,EACNC,KAAMA,WAOtB,eAAC7E,EAAA,EAAD,CAAME,UAAU,eAAhB,UACI,eAACF,EAAA,EAAKC,MAAN,CAAYC,UAAU,OAAOC,UAAU,iBAAvC,UACI,cAACH,EAAA,EAAKI,MAAN,+DACA,sBAAKF,UAAU,WAAf,UACI,cAACF,EAAA,EAAKK,QAAN,CACAC,UAAWkG,EACXhG,YAAY,GACZD,KAAMsG,EAAOD,aAAe,OAAS,WACrCnI,MAAOiI,EACPjG,SAvEJ,SAACC,GACjBmE,EAAKnE,EAAMC,OAAOlC,UAwEE,qBAAKyB,UAAU,gBAAf,SACI,cAAC4F,EAAA,EAAD,CACAvE,QAnFI,WAChCuF,EAAU,2BAAKD,GAAN,IAAcD,cAAeC,EAAOD,iBAmFjBW,YAhFI,SAAC7G,GACjCA,EAAM8G,kBA6EsB,SAICX,EAAOD,aAAe,cAAC,IAAD,IAAiB,cAAC,IAAD,cAKpD,cAACvF,EAAA,EAAD,CACIC,QAAQ,UACRf,KAAK,SACLgB,QAAS,WACKmF,IAlFpBtJ,EAAMqK,GACLC,KAkFSjB,GAAK,GACL7B,GAAK,IAEL6B,GAAK,IARb,oBAaA,cAACpF,EAAA,EAAD,CACIC,QAAQ,UACRf,KAAK,SACLgB,QAAS,WACLnE,EAAM0H,eAAc,IAJ5B,oBASC0B,EAEG,cAAC/E,EAAA,EAAD,CAAOvB,UAAU,aAAuCoB,QAAQ,SAAhE,+BAAkC,uBAIlC,8B,0BCvIlBqG,EAAkB,CACtB,CACE5G,GAAI,IACJC,UAAW,OACXC,SAAU,MACVC,aAAc,EACdC,YAAa,IAiEFyG,EA7DH,WACV,MAA0CzI,mBAASwI,GAAnD,mBAAOE,EAAP,KAAsBC,EAAtB,KACA,EAAgC3I,oBAAS,GAAzC,mBAAOY,EAAP,KAAiByB,EAAjB,KACA,EAAsCrC,mBAAS,sBAA/C,mBAAO5B,EAAP,KAAoByH,EAApB,KACA,EAAwC7F,mBAAS,IAAjD,mBAAO3B,EAAP,KAAqBuH,EAArB,KACA,EAA0C5F,oBAAS,GAAnD,mBAAO2C,EAAP,KAAsBlB,EAAtB,KACA,EAAgDzB,mBAAS,GAAzD,mBAAO4I,EAAP,KAAyBC,EAAzB,KACA,EAAsC7I,oBAAS,GAA/C,mBAAO8I,EAAP,KAAoBC,EAApB,KAiBMC,EAAqB,SAACC,GAE1B,OADgBA,EAAqBjF,OAAS,GAC/BtB,YAGjB,OACE,gCACE,cAAC,EAAD,CACEmD,eAAgBA,EAChBD,gBAAiBA,EACjBD,cAAeoD,EACfnB,UAAWkB,EACX/E,UAAW2E,EACXzB,cAAe0B,EACfL,EAAGY,aAGL,cAACvC,EAAA,EAAD,CAAY5F,UAAU,qBAAqBqB,QAhCpB,WACzB2G,GAAe,IA+Bb,SACE,cAAC,IAAD,CAAcnC,GAAI,CAAEhD,MAAO,YAG7B,cAAC,EAAD,CACIlC,cAjCuB,SAACyH,GAC9BA,EAASnH,YAAcgH,EAAmBN,GAC1CS,EAASvH,GAAKgH,EAAiBlG,WAC/ByG,EAASpH,aAAe6G,EACxBvG,GAAY,GACZsG,GAAiB,WACf,MAAM,GAAN,mBAAWD,GAAX,CAA0BS,OAE5BN,EAAoBD,EAAmB,IA0BjCnG,WAAYiG,EAAc1E,OAC1BpD,SAAUA,EACVxC,YAAaA,EACbC,aAAcA,EACdgE,YAAaA,EACbM,cAAeA,EACflB,iBAAkBA,IAGtB,cAAC,EAAD,CAAesC,UAAW2E,QCvEhCU,EAAQ,KAAUC,SAElBC,IAAS1J,OAAO,cAAC,EAAD,IAAS2J,SAASC,eAAe,U","file":"static/js/main.e40f2305.chunk.js","sourcesContent":["import React, { useRef, useEffect } from 'react'\n\nexport default function PayPal(props) {\n    \n    const paypal = useRef();\n\n    const serviceName = props.serviceName\n    const servicePrice = props.servicePrice\n\n    console.log(props, \"PROPS\")\n    console.log(serviceName, \"NAME\")\n    console.log(servicePrice, \"PRICE\")\n\n    useEffect(()=> {\n            window.paypal\n                .Buttons({\n                    createOrder: (data, actions, err) => {\n                        return actions.order.create({\n                            intent: \"CAPTURE\",\n                            purchase_units: [\n                                {\n                                    description: serviceName,\n                                    amount: {\n                                        currency_code: \"USD\",\n                                        value: servicePrice,\n                                    }\n                                }\n                            ]\n                        })\n                    },\n                    onApprove: async (data, actions) => {\n                        const order = await actions.order.capture()\n                        console.log(order)\n                        await props.submitHandler()\n                    },\n                    onError: (err) => {\n                        console.log(err)\n                    }\n            }).render(paypal.current)\n    }, [props, serviceName, servicePrice])\n\n    return (\n        <div>\n            <div ref={paypal}></div>\n        </div>\n    )\n}","import React, { useState } from \"react\";\nimport PayPal from \"../PayPal/PayPal\";\nimport \"./NewCustomerForm.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Alert from 'react-bootstrap/Alert'\n\n\nconst NewCustomerForm = (props) => {\n  const [enteredFirstName, setEnteredFirstName] = useState(\"\");\n  const [enteredLastName, setEnteredLastName] = useState(\"\");\n  const [buttonText, setButtonText] = useState(\"Checkout\");\n  const [firstValid, setFirstValid] = useState(false);\n  const [lastValid, setLastValid] = useState(false);\n\n  const buttonTextHandler = () => {\n    if (props.checkout === true){\n      setButtonText(\"Checkout\")\n    }\n    else setButtonText(\"Cancel\")\n  }\n\n  const namePresentChecker = () => {\n    if (enteredFirstName !== \"\" && enteredLastName !== \"\"){\n      return true\n    }\n    else\n    if (enteredFirstName === \"\") {\n      setFirstValid(true)\n    }\n    if (enteredLastName === \"\") {\n      setLastValid(true)\n    }\n    return false\n    \n  }\n\n  const firstNameChangeHandler = (event) => {\n    setEnteredFirstName(event.target.value);\n  };\n\n  const lastNameChangeHandler = (event) => {\n    setEnteredLastName(event.target.value);\n  };\n\n  const submitHandler = () => {\n    const customerData = {\n      id: \"\",\n      firstName: enteredFirstName,\n      lastName: enteredLastName,\n      clientNumber: \"\",\n      placeInLine: \"\"\n    };\n\n    props.onAddCustomerToLine(customerData);\n    setEnteredFirstName(\"\");\n    setEnteredLastName(\"\");\n    props.setCustomerPayed(false);\n    buttonTextHandler()\n    setFirstValid(false)\n    setLastValid(false)\n    \n  };\n\n  const localCheckoutHandler = () => {\n    if (props.checkout === false) {\n      props.setCheckOut(true)\n    }\n    else props.setCheckOut(false)\n  }\n\n  return (\n    <Form>\n      <Form.Group className=\"mb-3\">\n        <h3 className=\"new-customer-header\">Purchase a place in line for the following:</h3>\n        <h4>{props.serviceName} for ${props.servicePrice}</h4>\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\" controlId=\"formBasicInput\">\n        <Form.Label>First Name</Form.Label>\n        <Form.Control \n          isInvalid={firstValid} \n          type=\"text\" \n          placeholder=\"First Name\"\n          value={enteredFirstName}\n          onChange={firstNameChangeHandler}\n        />\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\" controlId=\"formBasicInput\">\n        <Form.Label>Last Name</Form.Label>\n        <Form.Control \n          isInvalid={lastValid} \n          type=\"text\" \n          placeholder=\"Last Name\" \n          value={enteredLastName}\n          onChange={lastNameChangeHandler}\n        />\n      </Form.Group>\n      <div className=\"paypal\">\n      {props.checkout ? (\n            \n            <PayPal \n\n            serviceName = {props.serviceName}\n            servicePrice = {props.servicePrice}\n            setCustomerPayed={props.setCustomerPayed}\n            onAddCustomer={props.onAddCustomer}\n            submitHandler={submitHandler}\n            \n            >\n            </PayPal>\n          ) : (\n          <div></div>\n        )}\n      </div>\n      <Button variant=\"primary\" type=\"button\" \n          onClick={()=> {\n            setFirstValid(false)\n            setLastValid(false)\n            if (namePresentChecker()) {\n              localCheckoutHandler();\n              buttonTextHandler();\n              setFirstValid(false)\n              setLastValid(false)\n            }\n            }}>\n          {buttonText}\n      </Button>\n      {firstValid || lastValid ? \n      \n        (\n        <Alert className=\"new-customer-alert\" key=\"validationAlert\" variant=\"danger\">\n          Please Finish Entering Your Name to Continue!\n        </Alert>\n        ) : (\n        <div></div>\n      )}\n    </Form>\n  );\n};\n\nexport default NewCustomerForm;\n","import React from \"react\";\n\nimport NewCustomerForm from \"./NewCustomerForm\";\nimport \"./NewCustomer.css\";\n\nconst NewCustomer = (props) => {\n  \n\n\n  const addNewCustomerToLineHandler = (newCustomerData) => {\n    const customerData = {\n      ...newCustomerData,\n      id: props.lineLength.toString(),\n    };\n    props.onAddCustomer(customerData);\n\n  };\n\n  return (\n    <div className=\"new-customer\">\n        <NewCustomerForm\n          onAddCustomerToLine={addNewCustomerToLineHandler}\n          checkout={props.checkout}\n          serviceName={props.serviceName}\n          servicePrice={props.servicePrice}\n          setCheckOut={props.setCheckOut}\n          customerPayed={props.customerPayed}\n          setCustomerPayed={props.setCustomerPayed}\n          onAddCustomer={props.onAddCustomer}\n        />\n    </div>\n  );\n};\n\nexport default NewCustomer;\n","import React from 'react';\nimport Table from 'react-bootstrap/Table'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst CustomerTable = (props) => {\n\n    const headerColor = '#5024dd'\n\n    const customTable = {\n    \n        width: '75%',\n        margin: 'auto',\n        textAlign: 'center',\n\n    }\n\n    const customTHMiddle = {\n        width: '50%',\n        backgroundColor: headerColor,\n    }\n\n    const customTHLeft = {\n        borderRadius: '10px 0px 0px 0px',\n        borderCollapse: 'separate',\n        width: '25%',\n        backgroundColor: headerColor,\n    }\n\n    const customTHRight = {\n        borderRadius: '0px 10px 0px 0px',\n        borderCollapse: 'separate',\n        width: '25%',\n        backgroundColor: headerColor,\n    }\n\n    const tableData = () =>{\n        let arr = []\n        const color = (n) => {\n            if (n === 0 || (n % 2) === 0) {\n                return {\n                    backgroundColor: '#7350e4',\n                }\n            }\n            else return {\n                backgroundColor: '#967ceb',\n            }\n        }\n        for (let i = 0; i < props.customers.length; i++) {\n            arr[i] = \n                <tr key={props.customers[i].clientNumber}>\n                    <td style={color(i)}>{props.customers[i].placeInLine}</td>\n                    <td style={color(i)}>{props.customers[i].firstName + \" \" + props.customers[i].lastName}</td>\n                    <td style={color(i)}>{props.customers[i].clientNumber}</td>\n                </tr>\n        }\n        return arr\n    }\n\n    return (\n        <Table style={customTable} hover borderless variant=\"dark\">\n            <thead>\n                <tr>\n                    <th style={customTHLeft}>Place in Line</th>\n                    <th style={customTHMiddle}>Name</th>\n                    <th style={customTHRight}>Service Number</th>\n                </tr>\n            </thead>\n            <tbody>\n                {tableData()}\n            </tbody>\n        </Table>\n    );\n};\n\nexport default CustomerTable;","import React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './EditSessionForm.css'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Alert from 'react-bootstrap/Alert'\n\nconst EditSessionForm = (props) => {\n    const [timeValue, setTimeValue] = useState(1)\n    const [timeType, setTimeType] = useState(\"\")\n    const [serviceDesc, setServiceDesc] = useState(\"\")\n    const [price, setPrice] = useState(1)\n    const [numValid, setNumValid] = useState(false)\n    const [serValid, setSerValid] = useState(false)\n    const [priceValid, setPriceValid] = useState(false)\n    const [typeValid, setTypeValid] = useState(false)\n    \n    const timeFormats = [\n        \"Minute\",\n        \"Minutes\",\n        \"Hour\",\n        \"Hours\"\n    ]\n\n    const timeFormatOptions = () => {\n        let arr = [<option value={\"\"} key={\"-1\"}>Select Increment</option>]\n        for (let i = 0; i < timeFormats.length; i++) {\n                arr[i+1] = <option value={timeFormats[i]} key={i.toString()}>{timeFormats[i]}</option>\n        }\n        return arr\n    }\n\n    const submitHandler = () => {\n        props.setServicePrice(price)\n        props.setServiceName(timeValue + \" \" + timeType + \" of \" + serviceDesc)\n        props.setX(false)\n        props.setS(\"\")\n        props.showEditModal(false)\n    }\n\n    const cancelHandler = () => {\n        props.setX(false)\n        props.setS(\"\")\n        props.showEditModal(false)\n    }\n\n    const fieldsFilled = () => {\n        setNumValid(false)\n        setTypeValid(false)\n        setSerValid(false)\n        setPriceValid(false)\n        if (\n            timeValue < 1 ||\n            timeType === \"\" ||\n            serviceDesc === \"\" ||\n            serviceDesc === \"Your Services Here\" ||\n            price < 1\n        ) {\n            if (timeValue < 0.01){\n                setNumValid(true)\n            }\n            if (timeType === \"\"){\n                setTypeValid(true)\n            }\n            if (serviceDesc === \"\" || serviceDesc === \"Your Services Here\"){\n                setSerValid(true)\n            }\n            if (price < 0.01){\n                setPriceValid(true)\n            }\n            \n            return false\n        }\n        \n        else \n        return true\n    }\n    \n    const timeValueChangeHandler = (event) => {\n        setTimeValue(event.target.value);\n      };\n    \n    const timeTypeChangeHandler = (event) => {\n        setTimeType(event.target.value);\n      };\n\n    const serviceDescChangeHandler = (event) => {\n        setServiceDesc(event.target.value);\n      };\n\n    const priceChangeHandler = (event) => {\n        setPrice(event.target.value);\n      };\n\n    return (\n\n        <Form>\n            <Form.Group className=\"mb-3\">\n                <h3 className=\"edit-header\">Make Changes to Your Offered Services</h3>\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicInput\">\n                <Form.Label>Length of Service</Form.Label>\n                <Form.Control \n                    className=\"input-spacing\"\n                    isInvalid={numValid} \n                    placeholder={1}\n                    type=\"number\"\n                    value={timeValue}\n                    onChange={timeValueChangeHandler}\n                    step=\"1\"\n                    min=\"1\"\n                />\n                <Form.Select \n                    aria-label=\"Default select example\" \n                    onChange={timeTypeChangeHandler}\n                    isInvalid={typeValid}\n                    value={timeType}\n                >\n                    {timeFormatOptions()}\n                </Form.Select>\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicInput\">\n                <Form.Label>Service Description</Form.Label>\n                <Form.Control \n                isInvalid={serValid}\n                type=\"text\" \n                placeholder=\"Your Services Here\"\n                value={serviceDesc}\n                onChange={serviceDescChangeHandler}\n                />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicInput\">\n                <Form.Label>Service Price (USD)</Form.Label>\n                <Form.Control \n                isInvalid={priceValid}\n                placeholder=\"0.00\"\n                type=\"double\"\n                value={price}\n                onChange={priceChangeHandler}\n                step=\"0.01\"\n                min=\"0.01\"\n                />\n            </Form.Group>\n            <Button \n                variant=\"primary\"\n                type=\"button\" \n                onClick={()=> {cancelHandler()}\n            }>\n                Cancel\n            </Button>\n            <Button \n                variant=\"primary\"\n                type=\"button\" \n                onClick={()=> {\n                    if (fieldsFilled()) {\n                    submitHandler();\n                    }\n                }\n            }>\n                Submit\n            </Button>\n            {numValid || serValid || priceValid ? \n            \n                (\n                <Alert className=\"new-customer-alert\" key=\"validationAlert2\" variant=\"danger\">\n                    A value in an entered field is either Missing or Invalid!\n                </Alert>\n                ) : (\n                <div></div>\n            )}\n        </Form>\n        \n    );\n};\n\nexport default EditSessionForm;","import React, { useState } from 'react';\nimport Table from 'react-bootstrap/Table'\nimport Button from 'react-bootstrap/Button'\nimport ReactModal from 'react-modal';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport IconButton from '@mui/material/IconButton';\nimport '../EditSessionModal/EditSessionForm.css'\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport \"../EditSessionModal/EditSessionForm\"\n\nconst CustomerTableEdit = (props) => {\n    const [localModalHandler, setLocalModalHandler] = useState(false)\n    const [deleteId, setDeleteId] = useState(\"\")\n    const [deleteName, setDeleteName] = useState(\"\")\n\n    const headerColor = '#5024dd'\n\n    const headerAlign = {\n        textAlign: 'center',\n    }\n\n    const customModal = {\n        content: {\n            width: '50%',\n            height: 'auto',\n            right: 'auto',\n            bottom: 'auto',\n            border: 'none',\n            backgroundColor: 'white',\n        }\n    }\n\n    const customTable = {\n    \n        width: '100%',\n        margin: 'auto',\n        textAlign: 'center',\n\n    }\n\n    const customTHMiddle = {\n        width: '50%',\n        backgroundColor: headerColor,\n    }\n\n    const customTHLeft = {\n        borderRadius: '10px 0px 0px 0px',\n        borderCollapse: 'separate',\n        width: '25%',\n        backgroundColor: headerColor,\n    }\n\n    const customTHRight = {\n        borderRadius: '0px 10px 0px 0px',\n        borderCollapse: 'separate',\n        width: '25%',\n        backgroundColor: headerColor,\n    }\n\n    const cancelHandler = () => {\n        props.setX(false)\n        props.setS(\"\")\n        props.showEditModal(false)\n       \n    }\n\n    const deleteFinal = () => {\n        let arr = props.customers.filter(function( obj ) {\n            return obj.id !== deleteId;\n        });\n\n        for (let i = 0; i < arr.length; i++) {\n            arr[i].placeInLine = i + 1\n        }\n        \n        props.editCustomers(arr)\n        setLocalModalHandler(false)\n    }\n\n    const localCancel = () => {\n        setLocalModalHandler(false)\n    }\n\n    const tableData = () =>{\n        let arr = []\n        const color = (n) => {\n            if (n === 0 || (n % 2) === 0) {\n                return {\n                    backgroundColor: '#7350e4',\n                }\n            }\n            else return {\n                backgroundColor: '#967ceb',\n            }\n        }\n        for (let i = 0; i < props.customers.length; i++) {\n            arr[i] = \n                <tr key={props.customers[i].clientNumber} className=\"center-text-vertical\">\n                    <td style={color(i)}>{props.customers[i].placeInLine}</td>\n                    <td style={color(i)}>{props.customers[i].firstName + \" \" + props.customers[i].lastName}</td>\n                    <td style={color(i)}>{props.customers[i].clientNumber}</td>\n                    <td style={color(i)} className=\"center-icon\">\n                        <IconButton \n                            onClick={() => {\n                                setLocalModalHandler(true); \n                                setDeleteId(props.customers[i].id)\n                                setDeleteName(props.customers[i].firstName + \" \" + props.customers[i].lastName)\n                            }}\n                        >\n                            <DeleteForeverIcon sx={{ color: \"grey\" }} />\n                        </IconButton>\n                    </td>\n                        \n                </tr>\n        }\n        return arr\n    }\n\n    return (\n        <div>\n            <h3 style={headerAlign}>Remove a customer from the Line</h3>\n            <Table style={customTable} borderless variant=\"dark\">\n                <thead>\n                    <tr>\n                        <th style={customTHLeft}>Place in Line</th>\n                        <th style={customTHMiddle}>Name</th>\n                        <th style={customTHMiddle}>Service Number</th>\n                        <th style={customTHRight}>Remove Customer</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {tableData()}\n                </tbody>\n            </Table>\n            <Button \n                variant=\"primary\"\n                type=\"button\" \n                onClick={()=> {cancelHandler()}}\n            >\n                Done\n            </Button>\n            <div style={customModal}>\n                <ReactModal\n                    className=\"edit-session\"\n                    style={customModal}\n                    isOpen={localModalHandler}\n                    ariaHideApp={false}\n                >\n                    <div className=\"center-content\">\n                        <h4>Are you sure you want to remove {deleteName} from the line? This cannot be undone.</h4>\n                        <Button \n                            variant=\"primary\"\n                            type=\"button\" \n                            onClick={()=>{deleteFinal()}}\n                        >\n                            Yes\n                        </Button>\n                        <Button \n                            variant=\"primary\"\n                            type=\"button\" \n                            onClick={()=>{localCancel()}}\n                        >\n                            Cancel\n                        </Button>\n                    </div>\n                    \n                </ReactModal>\n            </div>\n            \n        </div>\n    );\n};\n\nexport default CustomerTableEdit;","import React, {useState} from 'react';\nimport EditSessionForm from './EditSessionForm'\nimport CustomerTableEdit from '../CustomerTable/CustomerTableEdit'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./EditSessionForm.css\"\nimport ReactModal from 'react-modal';\nimport Tabs from 'react-bootstrap/Tabs'\nimport Tab from 'react-bootstrap/Tab'\nimport Form from 'react-bootstrap/Form'\nimport IconButton from \"@mui/material/IconButton\";\nimport Button from 'react-bootstrap/Button'\nimport Alert from 'react-bootstrap/Alert'\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport { TryRounded } from '@mui/icons-material';\n\n\nconst EditSessionModal = (props) => {\n    const [x, setX] = useState(false)\n    const [w, setW] = useState(false)\n    const [s, setS] = useState(\"\")\n    const [values, setValues] = useState({\n        password: \"\",\n        showPassword: false,\n      });\n\n    const handleClickShowPassword = () => {\n    setValues({ ...values, showPassword: !values.showPassword });\n    };\n    \n    const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n    };\n\n    const mainHandler = (event) => {\n        setS(event.target.value)\n    }\n\n    const vMain = (a) => {\n        if (a === props.p) {\n            return TryRounded\n        }\n        else \n        return false\n    }\n\n    const customStyles = {\n        content: {\n          top: '5%',\n          bottom: 'auto',\n          background: '#967ceb',\n          border: 'none',\n        },\n      };\n\n    return (\n        <ReactModal\n            isOpen={props.modalBool}\n            style={customStyles}\n            setServiceName={props.setServiceName}\n            setServicePrice={props.setServicePrice}\n            showEditModal={props.showEditModal}\n            ariaHideApp={false}\n        >\n            { x ? (\n                <Tabs\n                    defaultActiveKey=\"1\"\n                    id=\"editTabs\"\n                    className=\"mb-3\"\n                    >\n                    <Tab eventKey=\"1\" title=\"Services\">\n                        <div className=\"edit-session\">\n                        <EditSessionForm\n                            setServiceName={props.setServiceName}\n                            setServicePrice={props.setServicePrice}\n                            showEditModal={props.showEditModal}\n                            setX={setX}\n                            setS={setS}\n                        >\n                        </EditSessionForm>\n                        </div>\n                    </Tab>\n                    <Tab eventKey=\"2\" title=\"Line\">\n                        <div className=\"edit-session-line\">\n                            <CustomerTableEdit \n                                customers={props.customers}\n                                editCustomers={props.editCustomers}\n                                showEditModal={props.showEditModal}\n                                setX={setX}\n                                setS={setS}\n                            >\n                            </CustomerTableEdit>\n                        </div>\n                    </Tab>\n                </Tabs> \n                ) : (\n                <Form className=\"edit-session\">\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicInput\">\n                        <Form.Label>Please Input Password to Access Session Settings</Form.Label>\n                        <div className=\"see-pass\">\n                            <Form.Control \n                            isInvalid={w}\n                            placeholder=\"\"\n                            type={values.showPassword ? \"text\" : \"password\"}\n                            value={s}\n                            onChange={mainHandler}\n                            />\n                            <div className=\"see-pass-icon\">\n                                <IconButton\n                                onClick={handleClickShowPassword}\n                                onMouseDown={handleMouseDownPassword}\n                                >\n                                {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                                </IconButton>\n                            </div>\n                        </div>\n                    </Form.Group>\n                    <Button \n                        variant=\"primary\"\n                        type=\"button\" \n                        onClick={()=> {\n                            if (vMain(s)) {\n                            setW(false);\n                            setX(true);\n                            }else\n                            setW(true)\n                        }\n                    }>\n                        Submit\n                    </Button>\n                    <Button \n                        variant=\"primary\"\n                        type=\"button\" \n                        onClick={()=> {\n                            props.showEditModal(false)\n                        }\n                    }>\n                        Cancel\n                    </Button>\n                    {w ? \n                        (\n                        <Alert className=\"pass-alert\" key=\"validationAlertPass\" variant=\"danger\">\n                            Incorrect Password\n                        </Alert>\n                        ) : (\n                        <div></div>\n                    )}\n                </Form>\n            )}\n        </ReactModal>\n    );\n};\n\nexport default EditSessionModal;\n\n","import React, { useState } from 'react';\n\nimport NewCustomer from './components/NewCustomers/NewCustomer';\nimport CustomerTable from './components/CustomerTable/CustomerTable';\nimport EditSessionModal from './components/EditSessionModal/EditSessionModal';\nimport './App.css'\nimport IconButton from '@mui/material/IconButton';\nimport SettingsIcon from '@mui/icons-material/Settings';\n\n\nconst DUMMY_CUSTOMERS = [\n  {\n    id: '0',\n    firstName: 'John',\n    lastName: 'Doe',\n    clientNumber: 0,\n    placeInLine: 1\n  },\n];\n\nconst App = () => {\n  const [paidCustomers, setPaidCustomers] = useState(DUMMY_CUSTOMERS);\n  const [checkout, setCheckOut] = useState(false);\n  const [serviceName, setServiceName] = useState(\"1 Hour of Services\");\n  const [servicePrice, setServicePrice] = useState(50.00);\n  const [customerPayed, setCustomerPayed] = useState(false);\n  const [nextClientNumber, setNextClientNumber] = useState(1);\n  const [editSession, setEditSession] = useState(false);\n\n  const editSessionHandler = () => {\n    setEditSession(true)\n  }\n  \n  const addPaidCustomerHandler = (customer) => {\n    customer.placeInLine = placeInLineHandler(paidCustomers)\n    customer.id = nextClientNumber.toString()\n    customer.clientNumber = nextClientNumber\n    setCheckOut(false)\n    setPaidCustomers(() => {\n      return [...paidCustomers, customer];\n    });\n    setNextClientNumber(nextClientNumber + 1)\n  };\n\n  const placeInLineHandler = (customersStillInLine) => {\n    const newLine = customersStillInLine.length + 1\n    return newLine.toString()\n  };\n\n  return (\n    <div>\n      <EditSessionModal\n        setServiceName={setServiceName}\n        setServicePrice={setServicePrice}\n        showEditModal={setEditSession}\n        modalBool={editSession}\n        customers={paidCustomers}\n        editCustomers={setPaidCustomers}\n        p={process.env.REACT_APP_P}\n      >\n      </EditSessionModal>\n      <IconButton className=\"edit-session-modal\" onClick={editSessionHandler}>\n        <SettingsIcon sx={{ color: \"grey\" }} />\n      </IconButton>\n        \n      <NewCustomer \n          onAddCustomer={addPaidCustomerHandler} \n          lineLength={paidCustomers.length}           \n          checkout={checkout}\n          serviceName={serviceName}\n          servicePrice={servicePrice}\n          setCheckOut={setCheckOut}\n          customerPayed={customerPayed}\n          setCustomerPayed={setCustomerPayed}\n          \n      />\n      <CustomerTable customers={paidCustomers} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nrequire('dotenv').config()\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}